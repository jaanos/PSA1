try: # Python 3
    from time import process_time as pt
except ImportError: # Python 2
    from time import time as pt

import EvaErzin
import EvaZmazek
import FilipKoprivec
import GasperDomenRomih
import JanezRadescek
import JanGolob
import JanPerme
import JureHostnik
import JusKosmac
import KevinStampar
import LukaAvbreht
import LukaLajovic
import NinaSlivnik
import SamoKralj
import ZigaZupancic

T = [
     [1, 2, 27],
     [0, 14],
     [0, 3, 4, 8, 9, 33, 49],
     [2, 5, 36, 43],
     [2, 10, 13, 24],
     [3, 6, 12, 48, 58],
     [5, 7, 18],
     [6, 21, 29, 57, 76],
     [2, 15, 28, 42],
     [2, 11, 35],
     [4, 73],
     [9, 20, 52, 65, 68],
     [5],
     [4, 56],
     [1, 16, 32],
     [8, 45, 60, 87],
     [14, 17, 62, 79],
     [16, 22, 70],
     [6, 19, 23, 34, 38, 40],
     [18, 47],
     [11, 31],
     [7, 25],
     [17],
     [18, 26, 39],
     [4, 37, 44, 46],
     [21],
     [23, 30, 51],
     [0],
     [8, 41, 61, 69],
     [7, 55],
     [26, 59],
     [20],
     [14],
     [2, 53],
     [18, 99],
     [9, 63],
     [3, 54],
     [24, 50],
     [18],
     [23, 95, 96],
     [18],
     [28, 64],
     [8, 97],
     [3],
     [24],
     [15],
     [24],
     [19, 74],
     [5],
     [2, 80],
     [37],
     [26, 66, 75],
     [11],
     [33, 72],
     [36, 94],
     [29, 90],
     [13, 92],
     [7],
     [5],
     [30, 71, 77, 84],
     [15],
     [28, 82],
     [16, 67],
     [35],
     [41, 81, 89, 91],
     [11],
     [51, 93],
     [62],
     [11],
     [28, 83],
     [17, 86],
     [59],
     [53, 78],
     [10],
     [47],
     [51],
     [7],
     [59],
     [72, 88],
     [16, 85],
     [49],
     [64],
     [61],
     [69],
     [59],
     [79],
     [70],
     [15],
     [78],
     [64, 98],
     [55],
     [64],
     [56],
     [66],
     [54],
     [39],
     [39],
     [42],
     [89],
     [34]
    ]

w = [
     [9,   7,   4,   6,   3,  10,   5,   5,   6,   0,   6,   2,   9,   0,   7,   8,   3,   2,   8,   8,   7,   4,   2,   5,   0,   2,   9,   5,   4,   2,   2,   4,   3,   2,   5,   0,   1,   1,   9,   1,   2,   8,   5,   5,   2,   8,   7,   4,   6,   2,   1,   9,   3,   3,   5,   9,   3,   8,   1,   7,   5,   8,  10,   8,   0,   2,   1,   3,   7,   4,   8,   8,  10,   4,   7,   8,   2,   4,   3,   1,   7,   5,   3,   0,   1,   0,   2,   7,   1,   4,   9,   4,   3,  1,   8,   3,   1,   7,   3,   5],
     [9,   5,   1,   5,   4,   6,  10,   4,   1,   2,   5,   2,   6,   5,   6,   9,   5,   4,   9,   4,   5,   8,   0,   4,   5,   4,   3,   5,   6,   7,   9,   5,   4,   5,   1,   5,   5,   1,   2,  10,   2,   8,   6,   7,   7,   1,   8,   9,   6,   8,   7,   3,   9,   5,   8,   1,   6,   0,   3,   2,   7,  10,   2,   1,   3,  10,   8,   8,   2,   3,   5,   2,  10,   1,   4,   4,   6,   9,   3,   7,  10,   4,   6,   2,   8,   2,   7,   6,   1,   6,   4,   4,   3,  1,   6,   8,   7,   4,   4,  10],
     [0,   8,   7,   3,   1,   5,   2,   2,   5,   6,   0,   0,   0,   3,   2,   2,   2,   9,   7,   9,   8,   5,   7,   4,   5,   4,   5,   5,   5,   7,   3,   7,   3,   4,   2,   9,   3,   7,   3,   3,   6,   8,   6,   5,   6,   1,   4,   7,   2,   5,  10,   2,   4,   2,   4,   3,   5,   6,  10,   5,   4,   6,   2,  10,   7,   6,   9,   6,   6,   9,   5,   4,   9,   6,   7,   4,   2,   9,   1,   7,   3,  10,   9,   3,   3,   8,   3,   6,   0,   6,   8,   3,   1,  7,   9,   2,   4,   8,   7,   5],
     [1,   4,   5,   7,   2,   4,   7,   6,   7,   0,   3,   8,   3,   6,   5,  10,   3,   4,  10,   1,   2,   9,   9,   4,   6,   9,   3,   7,  10,   8,   8,   4,   8,   9,   3,   7,   9,   7,   5,   8,   8,   7,   3,   6,   7,   2,   7,   1,  10,   8,   9,   8,   1,   3,  10,   9,   3,   3,   7,   4,   8,   6,   3,   8,  10,   9,   5,   1,   6,   1,   8,   6,   9,   8,   6,   6,   5,   1,   1,   9,   3,   4,   3,   3,   2,   7,   9,   1,   8,   3,   3,   3,   7,  2,  10,   4,   9,   0,   3,   1],
     [5,  10,   5,  10,   4,   9,   6,   8,   8,   7,   6,   8,   1,   7,   5,   8,   7,   5,   3,   1,   0,   7,   3,   7,   4,   7,   0,   7,   1,   8,   6,   1,   0,   1,   2,   1,   4,   2,   1,   4,   3,   2,   9,   4,   3,   1,   7,   1,   6,   2,   2,   3,   9,   8,   7,   5,   9,   8,   8,   2,   7,   8,   6,   4,   0,   9,   9,   6,   7,   0,   3,   5,   0,   9,   2,   3,   7,   6,   6,   8,   2,   3,   6,   7,   4,   9,   6,   4,   4,   9,   9,   4,  10,  7,   8,   8,   9,   8,  10,   7],
     [5,   9,   6,   8,   7,   1,   8,   8,   2,   4,   4,   0,   9,   4,   2,   1,   6,   2,   5,   4,   3,   7,   2,   4,   9,   8,   3,   9,  10,   9,   3,   7,   2,   3,   4,   9,   5,   8,   5,   1,   1,   3,   3,   1,   6,   1,   1,   6,   3,   7,   3,   9,   6,   6,   1,   1,   2,   9,   5,   9,   1,   6,   4,   2,   7,   3,   4,   8,   1,   4,   5,   7,   6,   5,   6,   8,   4,   4,   2,   1,   1,   1,   6,   1,   6,   3,   8,   3,   2,   9,  10,   5,   9,  1,   3,   8,   2,   1,   0,   6],
     [3,   4,   0,   9,   1,   4,  10,  10,   7,   5,   7,   7,   6,   8,   3,   7,   2,   9,   1,   8,   1,   0,   4,   6,   8,   6,   7,   7,   8,   8,   5,   5,   4,   4,   5,   8,   3,   3,   9,   3,   3,   6,   8,   0,   2,   7,   8,   1,   4,   5,   3,   9,   8,   7,   9,   7,   3,   4,   5,   6,   5,   9,   4,   7,   7,   0,   5,   7,   2,  10,   1,   4,   8,   5,   2,   3,   8,   0,   7,   1,   9,   2,   1,   2,   2,   8,   5,   5,   3,   4,   1,   6,   7,  4,   5,   4,   3,   3,  10,   7],
     [2,   9,   8,  10,   1,   9,   2,   6,   8,   4,   9,   7,  10,   4,   0,   4,   5,   1,  10,   5,   2,   0,   1,   4,   1,   4,   2,   5,   5,   4,   2,   3,   3,   9,   8,   9,   4,   7,   6,   2,   7,   8,  10,   5,   9,   3,   9,   3,   6,   3,   7,   9,   9,   2,   5,   7,  10,   2,   2,   5,   6,   6,   1,   2,   0,   7,   4,   3,   0,   2,   6,   3,   5,   4,   1,   1,   2,  10,   1,   8,   2,   5,   2,   5,  10,   4,   6,   3,  10,   7,   5,   2,   0,  2,   8,   2,   6,   7,   4,   4],
     [9,   3,   2,   2,   3,   3,   8,   9,   5,   4,   4,   9,   4,   8,   2,  10,   7,   6,   6,   9,   2,   7,   0,   7,   9,   6,   6,  10,   1,   8,   3,   9,   4,   5,   7,   2,   5,   1,   5,   3,   6,   3,   3,   8,   7,   8,   0,   3,   6,   5,   8,   9,  10,   1,   8,   5,   8,   4,   4,   2,   6,   7,   4,   5,   4,   2,   4,   1,   8,   2,   5,   3,   7,   3,   5,   5,   0,   2,   4,   5,   0,   6,   4,   9,   5,   2,   2,   3,   8,   2,   3,   5,   2,  8,   7,   8,   6,   9,  10,   1],
     [7,   4,   7,   7,   5,   7,   8,   1,   1,   4,   2,   3,   3,   7,   4,   3,   6,   7,   6,   4,   6,   6,   9,   7,   3,   3,   6,   2,   7,   1,   0,   7,   3,   9,   9,   3,   8,   2,   9,   2,   1,   3,   1,   1,   4,   3,   5,   0,   5,  10,   0,   5,   0,   4,   6,   0,   6,   6,   2,   1,   8,   9,   6,   8,   7,  10,   7,   2,   4,   1,   8,   4,   3,   0,   7,   4,   8,   6,   9,   4,   5,   1,   7,   6,   9,  10,   3,   0,   8,   6,   1,   4,   1,  6,   2,   6,   4,   3,   8,   9]
    ]

K = len(w)

opt = 2602

def testModule(m):
    try:
        s = pt()
        V, M = m.maxCycleTreeIndependentSet(T, w)
        t = pt()
        print("%s.maxCycleTreeIndependentSet: %s s" % (m.__name__, t-s))
        r = sum(w[i][j] for i, j in M)
        print("Pravilna teža: % s" % (r == V))
        if not all(((i-1)%K, j) not in M and ((i+1)%K, j) not in M and
                   all((i, k) not in M for k in T[j]) for i, j in M):
            print("Nepravilna rešitev!")
        elif r > opt:
            print("Boljša rešitev od optimalne (%s < %s)!" % (r, opt))
        elif r < opt:
            print("Slabša rešitev od optimalne (%s < %s)!" % (r, opt))
        else:
            print("Pravilna rešitev!")
    except AttributeError:
        print("NAPAKA: %s.maxCycleTreeIndependentSet ni definiran!" % m.__name__)
    except Exception as ex:
        print("NAPAKA: %s.maxCycleTreeIndependentSet: %s" % (m.__name__, ex))
